# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from users_manager import users_pb2 as users__manager_dot_users__pb2


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/user_manager.UserService/CreateUser',
                request_serializer=users__manager_dot_users__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=users__manager_dot_users__pb2.User.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/user_manager.UserService/GetUser',
                request_serializer=users__manager_dot_users__pb2.GetUserRequest.SerializeToString,
                response_deserializer=users__manager_dot_users__pb2.User.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/user_manager.UserService/UpdateUser',
                request_serializer=users__manager_dot_users__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=users__manager_dot_users__pb2.User.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/user_manager.UserService/DeleteUser',
                request_serializer=users__manager_dot_users__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=users__manager_dot_users__pb2.DeleteUserResponse.FromString,
                _registered_method=True)
        self.AuthenticateUser = channel.unary_unary(
                '/user_manager.UserService/AuthenticateUser',
                request_serializer=users__manager_dot_users__pb2.AuthRequest.SerializeToString,
                response_deserializer=users__manager_dot_users__pb2.AuthResponse.FromString,
                _registered_method=True)
        self.ValidateUser = channel.unary_unary(
                '/user_manager.UserService/ValidateUser',
                request_serializer=users__manager_dot_users__pb2.ValidateUserRequest.SerializeToString,
                response_deserializer=users__manager_dot_users__pb2.ValidateUserResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthenticateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=users__manager_dot_users__pb2.CreateUserRequest.FromString,
                    response_serializer=users__manager_dot_users__pb2.User.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=users__manager_dot_users__pb2.GetUserRequest.FromString,
                    response_serializer=users__manager_dot_users__pb2.User.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=users__manager_dot_users__pb2.UpdateUserRequest.FromString,
                    response_serializer=users__manager_dot_users__pb2.User.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=users__manager_dot_users__pb2.DeleteUserRequest.FromString,
                    response_serializer=users__manager_dot_users__pb2.DeleteUserResponse.SerializeToString,
            ),
            'AuthenticateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateUser,
                    request_deserializer=users__manager_dot_users__pb2.AuthRequest.FromString,
                    response_serializer=users__manager_dot_users__pb2.AuthResponse.SerializeToString,
            ),
            'ValidateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateUser,
                    request_deserializer=users__manager_dot_users__pb2.ValidateUserRequest.FromString,
                    response_serializer=users__manager_dot_users__pb2.ValidateUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_manager.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('user_manager.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_manager.UserService/CreateUser',
            users__manager_dot_users__pb2.CreateUserRequest.SerializeToString,
            users__manager_dot_users__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_manager.UserService/GetUser',
            users__manager_dot_users__pb2.GetUserRequest.SerializeToString,
            users__manager_dot_users__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_manager.UserService/UpdateUser',
            users__manager_dot_users__pb2.UpdateUserRequest.SerializeToString,
            users__manager_dot_users__pb2.User.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_manager.UserService/DeleteUser',
            users__manager_dot_users__pb2.DeleteUserRequest.SerializeToString,
            users__manager_dot_users__pb2.DeleteUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthenticateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_manager.UserService/AuthenticateUser',
            users__manager_dot_users__pb2.AuthRequest.SerializeToString,
            users__manager_dot_users__pb2.AuthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_manager.UserService/ValidateUser',
            users__manager_dot_users__pb2.ValidateUserRequest.SerializeToString,
            users__manager_dot_users__pb2.ValidateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
